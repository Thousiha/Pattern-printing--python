# -*- coding: utf-8 -*-
"""pattern.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jfdnoII9RHLYTlYEJOOaWSXGn4GTbmvv

Pattern Programming
"""

n=int(input("enter a special character:"))
for i in range(1,n+1):
  print("*" * i)

n=int(input("enter a special character:"))
for i in range(1,n+1):
  print(" " * (n-i) + "*" * i)

n=int(input("enter a special character:"))
for i in range(n+1,0,-1):
    print("*" * i)

n=int(input("enter a special character:"))
for i in range(n,0,-1):
      print(" " * (n-i) + "*" * i)

"""#pyramid"""

n=int(input())
for i in range(1,n+1):
  print(" " *(n-i) +"* " * i )

n = 5
for i in range(n):
    for j in range(i+1):
        print(chr(65 + j), end=" ")  # 65 is ASCII for 'A'
    print()

"""reverse alphabet triangle"""

n = 5
for i in range(n, 0, -1):
    for j in range(i):
        print(chr(65 + j), end=" ")
    print()

#center aligned alphabet pyramid
n = 5
for i in range(n):
    print(" " * (n-i-1), end="")  # Print leading spaces
    for j in range(i+1):
        print(chr(65+j), end=" ")
    print()

""" Pascalâ€™s Triangle"""

n = 5
for i in range(n):
    num = 1
    print(" " * (n - i), end="")
    for j in range(i + 1):
        print(num, end=" ")
        num = num * (i - j) // (j + 1)  # Compute next binomial coefficient
    print()
